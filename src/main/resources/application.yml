

logging:
  level:
    root: warn
    web: info
    com:
      example: debug


spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 550028112480-i72gv2lu7o2bjq3tkfs5f46jf9gil959.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://accounts.google.com/o/oauth2/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  datasource:
    username: postgres
    password: ${PASSWORD}
    url: jdbc:postgresql://localhost:5432/dacs
#  jpa:
#    hibernate:
#      ddl-auto: create-drop
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#        jdbc:
#          time_zone: UTC
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  data:
    rest:
      base-path: /auto-api
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: true
  mail:
    host: localhost
    port: 1025
    username: hello
    password: hello
    properties:
      mail:
        smtp:
          ssl:
            trust: "*"
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
  servlet:
    multipart:
      max-request-size: 50MB
      max-file-size: 50MB

token:
  secret:
    key: 48a868a4042f634ac04a117f00a87202131dd7c46c4b32c4acb3edc5e15f4511
  expirations: 36000000

local:
  path: ${FILEPATH}




